name: Native Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up GraalVM JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Verify compiler availability
        if: runner.os == 'Windows'
        run: |
          echo %PATH%
          where cl || echo "‚ùå Compiler not found in PATH"

      # Native build for both platforms
      - name: Build native image
        run: mvn gluonfx:build

      # Wait for the .app to be generated (macOS)
      - name: Wait for .app generation (macOS only)
        if: runner.os == 'macOS'
        run: |
          while [ ! -d "target/gluonfx/aarch64-darwin/minecraft-launcher.app" ]; do
            echo "Waiting for .app to be generated..."
            sleep 10
          done
          echo ".app is ready!"

      # DMG creation for macOS
      - name: Create DMG (macOS only)
        if: runner.os == 'macOS'
        run: |
          chmod +x ./package-dmg.sh
          ./package-dmg.sh

      # Upload DMG (macOS)
      - name: Upload DMG artifact (macOS only)
        if: runner.os == 'macOS'
        uses: actions/upload-artifact@v4
        with:
          name: macOS-DMG
          path: target/dist/minecraft-launcher.dmg

      # Upload native Windows build
      - name: Upload Windows Native EXE
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: Windows-Native-Build
          path: target/gluonfx/x86_64-windows/gvm/