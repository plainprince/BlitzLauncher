name: GraalVM Native Build

on:
  push:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-latest  # Use Windows 2022 runner to ensure Visual Studio 2022 is available
    steps:
      - uses: actions/checkout@v4

      - name: Setup GraalVM for JDK 21
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Visual Studio 2022 Build Tools
        shell: pwsh
        run: |
          # Download Visual Studio Build Tools Installer
          Invoke-RestMethod -Uri https://aka.ms/vs/17/release/vs_buildtools.exe -OutFile vs_buildtools.exe
          # Install Visual Studio Build Tools with C++ and Windows SDK components
          Start-Process -FilePath vs_buildtools.exe -ArgumentList "--add", "Microsoft.VisualStudio.Component.VC.Tools.x86.x64", "--add", "Microsoft.VisualStudio.Component.Windows10SDK.19041", "--norestart", "--passive", "--wait" -Wait -PassThru
          # Remove installer
          Remove-Item vs_buildtools.exe
          
      - name: Set up Visual Studio environment
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\BuildTools\VC\Auxiliary\Build\vcvars64.bat"

      - name: Verify Visual Studio Installation
        shell: cmd
        run: |
          where cl

      - name: Build Windows Native Image
        shell: cmd
        run: mvn gluonfx:build

      - name: Upload .exe artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-x64.exe
          path: |
            target\gluonfx\*\*.exe

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup GraalVM for JDK 21 (macOS)
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build macOS Native Image
        run: ./mvnw gluonfx:build

      - name: Build macOS .app bundle
        run: mvn gluonfx:package || true

      - name: Build macOS .app bundle
        if: matrix.os == 'macos-latest'
        continue-on-error: true
        run: mvn gluonfx:package -Dgvm.packageType=app || true

      - name: Run DMG creation script
        run: sh ./package-dmg.sh

      - name: Upload .dmg artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-aarch64.dmg
          path: |
            target/dist/*.dmg